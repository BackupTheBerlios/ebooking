<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd">

<!--
Author: Roman R&auml;dle
Version: $Id: web.xml,v 1.1 2005/10/16 18:27:19 raedler Exp $
Since: DAPS INTRA 1.0
 -->

<web-app>

    <display-name>eBooking</display-name>

    <description>eBooking application</description>

    <!--
      - Key of the system property that should specify the root directory of this
      - web app. Applied by WebAppRootListener or Log4jConfigListener.
      -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>ebooking.root</param-value>
    </context-param>

    <!--
      - Location of the Log4J config file, for initialization and refresh checks.
      - Applied by Log4jConfigListener.
      -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/classes/log4j.properties</param-value>
    </context-param>

    <!--
      - Location of the XML file that defines the root application context.
      - Applied by ContextLoaderServlet.
        -
        - Can include "/WEB-INF/dataAccessContext-local.xml" for a single-database
        - context, or "/WEB-INF/dataAccessContext-jta.xml" for a two-database context.
      -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>

    <!--context-param>
        <param-name>concern.processes</param-name>
        <param-value>/engagement-process.jar:/application-process.jar</param-value>
    </context-param>
    <context-param>
        <param-name>concern.configuration</param-name>
        <param-value>/controller-hibernate.cfg.xml</param-value>
    </context-param-->

    <!--
      - Stores the HttpServletRequest in a ThreadLocal so that a single
      - Thread of execution in the app server can retrieve the current request object.
      -->
    <!--
    <filter>
        <filter-name>requestfilter</filter-name>
        <filter-class>wilken.openshop.util.RequestManagerFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>requestfilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>
    -->

    <!-- for JBoss remove the Loglistener because JBoss has its own logger
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener> -->

    <!--
      - Loads the root application context of this web app at startup,
      - by default from "/WEB-INF/applicationContext.xml".
      - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
      - to access it anywhere in the web application, outside of the framework.
      -
      - The root context is the parent of all servlet-specific contexts.
      - This means that its beans are automatically available in these child contexts,
      - both for getBean(name) calls and (external) bean references.
    -->
    <listener>
        <listener-class>ebooking.core.context.ContainerContextLoaderListener</listener-class>
    </listener>
    <!--
    <listener>
        <listener-class>wilken.openshop.business.web.HttpSessionManager</listener-class>
    </listener>

    <listener>
        <listener-class>wilken.openshop.core.session.ModuleAccessInterceptor</listener-class>
    </listener>
    -->
    <!--listener>
        <listener-class>org.concern.test.engagement.gui.ConcernContextListener</listener-class>
    </listener-->

    <!--
	  - Loads the root application context of this web app at startup,
	  - by default from "/WEB-INF/applicationContext.xml".
		- Note that it is preferable to use ContextLoaderListener in a servlet container
		- that follows the Servlet 2.4 initialization order (most Servlet 2.3 containers do).
		-
	  - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
	  - to access it anywhere in the web application, outside of the framework.
	  -
	  - The root context is the parent of all servlet-specific contexts.
	  - This means that its beans are automatically available in these child contexts,
	  - both for getBean(name) calls and (external) bean references.
		-->
    <servlet>
        <servlet-name>context</servlet-name>
        <servlet-class>org.springframework.web.context.ContextLoaderServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>base</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>base</servlet-name>
        <url-pattern>/base/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>booking</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>booking</servlet-name>
        <url-pattern>/booking/*</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>base/login.jspa</welcome-file>
    </welcome-file-list>

    <error-page>
        <error-code>404</error-code>
        <location>/pagenotfound.jsp</location>
    </error-page>

    <taglib>
        <taglib-uri>/c</taglib-uri>
        <taglib-location>/WEB-INF/tld/c.tld</taglib-location>
    </taglib>

    <taglib>
        <taglib-uri>/spring</taglib-uri>
        <taglib-location>/WEB-INF/tld/spring.tld</taglib-location>
    </taglib>

    <taglib>
        <taglib-uri>/fmt</taglib-uri>
        <taglib-location>/WEB-INF/tld/fmt.tld</taglib-location>
    </taglib>

    <taglib>
        <taglib-uri>/webos</taglib-uri>
        <taglib-location>/WEB-INF/tld/webos.tld</taglib-location>
    </taglib>

    <taglib>
        <taglib-uri>/display</taglib-uri>
        <taglib-location>/WEB-INF/tld/displaytag-el-12.tld</taglib-location>
    </taglib>

</web-app>